$Theme-fontFamily-futura: 'futura-pt', sans-serif;
$Theme-fontFamily-ptSerif: 'pt-serif', serif;

$Theme-fontWeight-regular: 400;
$Theme-fontWeight-bold: 700;

$Theme-typography: (
  body: (
    font-size: (16px, 20px),
    line-height: (24px, 32px),
  ),
  quoteAuthorName: (
    font-family: $Theme-fontFamily-futura,
    font-size: (28px, 40px),
    font-weight: $Theme-fontWeight-bold,
    line-height: (40px, 52px),
  ),
  quoteAuthorTitle: (
    font-family: $Theme-fontFamily-futura,
    font-weight: $Theme-fontWeight-regular,
    font-size: (16px, 20px),
    line-height: (24px, 32px),
    text-transform: uppercase,
  ),
  quoteText: (
    font-family: $Theme-fontFamily-futura,
    font-size: (28px, 40px),
    line-height: (40px, 52px),
  ),
  statsLabel: (
    font-family: $Theme-fontFamily-futura,
    font-size: (20px, 24px),
    line-height: (28px, 36px),
    text-transform: uppercase,
  ),
  statsNumber: (
    font-family: $Theme-fontFamily-futura,
    font-size: (40px, 80px),
    line-height: (52px, 92px),
  ),
);

@mixin theme-typography($level, $typography: $Theme-typography) {
  $values: map-get($typography, $level);

  font-family: $Theme-fontFamily-ptSerif;
  font-style: normal;
  font-weight: $Theme-fontWeight-regular;

  @each $rule, $value in $values {
    @if type-of($value) == list {
      $mobile-value: nth($value, 1);
      $desktop-value: nth($value, 2);

      #{$rule}: $mobile-value;

      @include desktop {
        #{$rule}: $desktop-value;
      }
    } @else {
      #{$rule}: $value;
    }
  }
}
